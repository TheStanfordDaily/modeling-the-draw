{"version":3,"sources":["home.js","faq.js","store.js","calculator.js","pastdata.js","App.js","serviceWorker.js","index.js"],"names":["divStyle","border","borderWidth","headerStyle","top","color","fontFamily","buttonStyle","marginLeft","marginRight","footer2Style","ViewPastData","react_default","a","createElement","react_router_dom","to","Button_default","variant","Calculator","Faq","Home","state","style","Grid_default","container","direction","justify","alignItems","home_Calculator","React","Component","questionStyle","fontWeight","fontStyle","fontSize","answerStyle","Question1","Question2","Question3","Question4","FAQ","firebase","require","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","store","_ref","Object","asyncToGenerator","regenerator_default","mark","_callee","data","db","wrap","_context","prev","next","firestore","collection","add","objectSpread","date","Date","stop","_x","apply","this","arguments","textAlign","calculatorStyle","cutoffStyle","percentageStyle","allResidencesArray","schema","type","properties","sex","title","enum","enumNames","residence","roomtype","tiernumber","applytype","required","processSingleQuery","gender_raw","roomType_raw","resName_raw","tierNum_raw","applyType_raw","output","score_ceiling","score_floor","cutoffsList","gender","typeCol","resID","des_year","currData","data_1718","data_16","data_15","data_14","cutoffs","cutoffsStr","yearList","foundCutoff","i","length","j","item","year","res_name_edited","push","individual","group_2","group_3","group_4","pop","splice","ls_model","x_values","y_values","x_sum","y_sum","xsq_sum","xy_sum","count","x","y","findLeastSquares","cutoff2019","Math","round","processTrends","percentage","onError","errors","console","log","props","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onSubmit","_ref2","formData","results","setState","cutoff_2014","cutoff_2015","cutoff_2016","cutoff_2017","cutoff_2018","cutoff_2019","save","onChange","_ref3","array","dataArrays","includes","index","indexOf","newStr","substring","trim","newSchema","className","lib_default","PastData","dist_default","columns","name","label","options","filter","sort","filterType","responsive","selectableRows","print","download","isRowSelectable","dataIndex","onRowsDelete","rowsDeleted","App","react_router","exact","path","render","home","src_faq","calculator","pastdata","Boolean","window","location","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"wurpBAMMA,UAAW,CAEbC,OAAQ,gBACRC,YAAa,QAGXC,EAAc,CAChBC,IAAK,MACLC,MAAO,UACPC,WAAY,mCAIVC,EAAc,CAChBC,WAAY,MACZC,YAAa,OAGXC,EAAe,CACjBF,WAAY,MACZC,YAAa,OAGjB,SAASE,IACL,OACIC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMC,GAAG,aAAYJ,EAAAC,EAAAC,cAACG,EAAAJ,EAAD,CAAQK,QAAQ,kBAAhB,mBAM7B,SAASC,IACL,OACIP,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMC,GAAG,eAAcJ,EAAAC,EAAAC,cAACG,EAAAJ,EAAD,CAAQK,QAAQ,kBAAhB,2BAM/B,SAASE,IACL,OACIR,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMC,GAAG,QAAOJ,EAAAC,EAAAC,cAACG,EAAAJ,EAAD,CAAQK,QAAQ,kBAAhB,YA8CTG,6MAvCXC,MAAQ,2EAIJ,OACIV,EAAAC,EAAAC,cAAA,OAAKS,MAAOvB,GACRY,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,MAAIS,MAASpB,GAAb,qBAGAS,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKS,MAAOhB,GACRK,EAAAC,EAAAC,cAACU,EAAAX,EAAD,CACAY,WAAS,EACTC,UAAU,MACVC,QAAQ,eACRC,WAAW,UACPhB,EAAAC,EAAAC,cAACH,EAAD,MACAC,EAAAC,EAAAC,cAACe,EAAD,MACAjB,EAAAC,EAAAC,cAACM,EAAD,QAGRR,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,KAAGS,MAASb,GAAZ,8FAIAE,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,mBAlCGgB,IAAMC,WChDnB5B,UAAc,CAChBG,WAAY,kCACZD,MAAO,YAGL2B,EAAgB,CAClBC,WAAY,OACZC,UAAW,SACX5B,WAAY,gBACZ6B,SAAU,OACV3B,WAAY,KACZC,YAAa,MAGX2B,EAAc,CAChB5B,WAAY,KACZC,YAAa,MAGXT,EAAW,CAEbC,OAAQ,gBACRC,YAAa,OAGjB,SAASmC,IACL,OACIzB,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,KAAGS,MAAOS,GAAV,yDAGApB,EAAAC,EAAAC,cAAA,KAAGS,MAAOa,GAAV,+WAYZ,SAASE,IACL,OACI1B,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,KAAGS,MAAOS,GAAV,sCAGApB,EAAAC,EAAAC,cAAA,KAAGS,MAAOa,GAAV,kVAOAxB,EAAAC,EAAAC,cAAA,KAAGS,MAAOa,GAAV,mUAWZ,SAASG,IACL,OACI3B,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,KAAGS,MAAOS,GAAV,gEAGApB,EAAAC,EAAAC,cAAA,KAAGS,MAAOa,GAAV,iIAIAxB,EAAAC,EAAAC,cAAA,KAAGS,MAAOa,GAAV,gTAKAxB,EAAAC,EAAAC,cAAA,KAAGS,MAAOa,GAAV,6aAQAxB,EAAAC,EAAAC,cAAA,KAAGS,MAAOa,GAAV,4EAGAxB,EAAAC,EAAAC,cAAA,KAAGS,MAAOa,GAAV,oMASZ,SAASI,IACL,OACI5B,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,KAAGS,MAAOS,GAAV,2CAEApB,EAAAC,EAAAC,cAAA,KAAGS,MAAOa,GAAV,qgBA4CGK,mLA7BP,OACI7B,EAAAC,EAAAC,cAAA,OAAKS,MAAOvB,GACRY,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMC,GAAG,KAAIJ,EAAAC,EAAAC,cAACG,EAAAJ,EAAD,CAAQK,QAAQ,kBAAhB,SAGbN,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,MAAIS,MAAOpB,GAAX,8BAGAS,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACuB,EAAD,MACAzB,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACwB,EAAD,MACA1B,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACyB,EAAD,MACA3B,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAC0B,EAAD,MACA5B,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,KAAGS,MAAOa,GAAV,wFAtBEN,IAAMC,gEC7HpBW,EAAWC,EAAQ,KACvBA,EAAQ,KAURD,EAASE,cARM,CACXC,OAAQ,0CACRC,WAAY,+BACZC,YAAa,sCACbC,UAAW,eACXC,cAAe,2BACfC,kBAAmB,iBAIvB,IAAAC,EAAA,eAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,EAAA1C,EAAA2C,KAAe,SAAAC,EAAOC,GAAP,IAAAC,EAAA,OAAAJ,EAAA1C,EAAA+C,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACPJ,EAAKjB,EAASsB,YADPH,EAAAE,KAAA,EAELJ,EAAGM,WAAW,0BAA0BC,IAAxCb,OAAAc,EAAA,EAAAd,CAAA,GAAgDK,EAAhD,CAAsDU,KAAM,IAAIC,QAF3D,wBAAAR,EAAAS,SAAAb,MAAf,gBAAAc,GAAA,OAAAnB,EAAAoB,MAAAC,KAAAC,YAAA,GCPM1E,EAAW,CACfQ,WAAY,MACZC,YAAa,MACbR,OAAQ,gBACRC,YAAa,OAGTC,EAAc,CAClBwE,UAAW,SACXtE,MAAO,UACPC,WAAY,mCAGRsE,EAAkB,CACtBpE,WAAY,MACZC,YAAa,OAGToE,EAAc,CAClB1C,SAAU,OACVwC,UAAW,UAGPG,EAAkB,CACtB3C,SAAU,OACVwC,UAAW,UAGPI,EAAqB,CAAE,eAAgB,aAAc,SAAU,MAAO,UAAW,WAAY,UAAW,OAAQ,WACtH,WAAY,OAAQ,SAAU,OAAQ,cAAe,aAAc,MAAO,YAAa,SACvF,QAAS,eAAgB,UAAW,UAAW,sBAAuB,SAAU,UAAW,QAC3F,eAAgB,oBAAqB,mBAAoB,QAAS,SAAU,UAAW,WACvF,UAAW,mBAAoB,OAAQ,oBAAqB,OAAQ,QAAS,QAAS,aACtF,UAAW,SAAU,UAAW,SAAU,YAAa,QAAS,gBAAiB,SAAU,YAC3F,QAAS,SAAU,YAAa,WAAY,QAAS,OAAQ,UAAW,eACxE,kBAAmB,WAAY,SAAU,SAAU,UAAW,QAAS,QAAS,UAAW,SAC3F,oBAAqB,cAAe,aAAc,SAAU,OAAQ,MAAO,UAErEC,EAAS,CACbC,KAAM,SACNC,WAAY,CACVC,IAAK,CACHC,MAAO,OACPC,KAAM,CAAE,IAAK,IAAK,KAClBC,UAAW,CAAE,OAAQ,SAAU,QAEjCC,UAAW,CACTH,MAAO,aACPC,KAAMN,GAERS,SAAU,CACRJ,MAAO,aACPC,KAAM,CAAE,gBAAiB,gBAAiB,wBAAyB,gBAAiB,wBACpF,gBAAiB,cAAe,SAAU,SAAU,WAAY,UAAW,yBAC3E,aAAc,aAAc,aAAc,aAAc,aAAc,SAAU,SAAU,OAAQ,OAClGC,UAAW,CAAE,gBAAiB,gBAAiB,wBAAyB,gBAAiB,wBACvF,gBAAiB,cAAe,oBAAqB,mBAAoB,gBAAiB,eAC1F,yBAA0B,0BAA2B,gCACrD,2BAA4B,0BAA2B,yBAA0B,sBACjF,sBAAuB,sBAAuB,QAElDG,WAAY,CACVL,MAAO,cACPC,KAAM,CAAE,EAAG,EAAG,GACdC,UAAW,CAAE,SAAU,SAAU,WAEnCI,UAAW,CACTN,MAAO,eACPC,KAAM,CAAE,aAAc,UAAW,UAAW,WAC5CC,UAAW,CAAE,aAAc,aAAc,aAAc,gBAG3DK,SAAU,CAAC,MAAO,WAAY,YAAa,aAAc,cAyG3D,SAASC,EAAmBC,EAAYC,EAAcC,EAAaC,EAAaC,GAC9E,IAMIC,EAAS,GAEPC,EAA0B,IAJhBH,EAKVI,EAAcD,EAAgB,IAC9BE,EA7FR,SAAuBC,EAAQC,EAASC,EAAOC,GAY7C,IAXA,IAUIC,EAVAC,EAAYhE,EAAQ,KACpBiE,EAAUjE,EAAQ,KAClBkE,EAAUlE,EAAQ,KAClBmE,EAAUnE,EAAQ,KAElBoE,EAAU,GACVC,EAAa,GACbC,EAAW,CAAC,KAAM,KAAM,KAAM,KAAM,MAEpCC,GAAc,EAETC,EAAI,EAAGA,EAAIF,EAASG,OAAQD,IAAK,CACxC,OAAQF,EAASE,IACf,KAAK,KACHT,EAAWI,EACX,MACF,KAAK,KACHJ,EAAWG,EACX,MACF,KAAK,KACHH,EAAWE,EACX,MACF,QACEF,EAAWC,EAEfO,GAAc,EACd,IAAK,IAAIG,EAAI,EAAGA,EAAIX,EAASU,OAAQC,IAAK,CACxC,IAAIC,EAAOZ,EAASW,GACpB,GAAIC,EAAKC,MAAQN,EAASE,KAAiB,KAAVb,GAAiBgB,EAAKnC,KAAOmB,IAAWgB,EAAKE,iBAAmBhB,EAAO,CAEtG,OADAU,GAAc,EACNX,GACN,IAAK,aACHQ,EAAQU,KAAKH,EAAKI,YAClBV,EAAWS,KAAKH,EAAKI,YACrB,MACF,IAAK,UACHX,EAAQU,KAAKH,EAAKK,SAClBX,EAAWS,KAAKH,EAAKK,SACrB,MACF,IAAK,UACHZ,EAAQU,KAAKH,EAAKM,SAClBZ,EAAWS,KAAKH,EAAKM,SACrB,MACF,IAAK,UACHb,EAAQU,KAAKH,EAAKO,SAClBb,EAAWS,KAAKH,EAAKO,SAEU,IAA/Bd,EAAQA,EAAQK,OAAS,IAA2C,MAA/BL,EAAQA,EAAQK,OAAS,KAChEL,EAAQe,MACRb,EAASc,OAAOZ,EAAG,GACnBA,IACAH,EAAWA,EAAWI,OAAS,GAAK,OAEtC,OAGCF,IACHD,EAASc,OAAOZ,EAAG,GACnBA,IACAH,EAAWS,KAAK,QAIpB,GAAsB,GAAlBV,EAAQK,OACV,MAAO,gBACF,GAAsB,GAAlBL,EAAQK,OACjB,OAAOL,EAAQ,GACV,GAAIA,EAAQK,OAAS,GAAKH,EAASG,QAAUL,EAAQK,OAAQ,CAClE,IAAMY,EAzFV,SAA0BC,EAAUC,GAMlC,IALA,IAAIC,EAAQ,EACRC,EAAQ,EACRC,EAAU,EACVC,EAAS,EACTC,EAAQ,EACHpB,EAAI,EAAGA,EAAIc,EAASb,OAAQD,IAAK,CACxC,IAAIqB,EAAIP,EAASd,GACbsB,EAAIP,EAASf,GACjBgB,GAASK,EACTJ,GAASK,EACTJ,GAAYG,EAAIA,EAChBF,GAAWE,EAAIC,EACfF,IAIF,MAAO,EAFSA,EAAQD,EAAWH,EAAQC,IAAcG,EAAQF,EAAYF,EAAQA,IACrEC,EAAQC,EAAYF,EAAQG,IAAeC,EAAQF,EAAYF,EAAQA,IAyEpEO,CAAiBzB,EAAUF,GACxC4B,EAAaC,KAAKC,MAAMb,EAAS,GAAKvB,EAAWuB,EAAS,IAO9D,OANIW,EAAa,EACfA,EAAa,EACJA,EAAa,MACtBA,EAAa,KAEf3B,EAAWS,KAAKkB,GACT3B,EAET,OAAO,EAca8B,CAVPjD,EAGCI,EAFCH,EACU,IAAMC,EAQ2B,MAGtDkB,EAAW,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MAC9C,GAAIZ,EAAYe,QAAUH,EAASG,OACjC,IAAK,IAAImB,EAAQ,EAAGA,EAAQtB,EAASG,OAAQmB,IACvCA,GAAStB,EAASG,OAAS,EAC7BlB,EAAOuB,KAAKR,EAASsB,GAAS,sBAAwBlC,EAAYkC,IAElErC,EAAOuB,KAAKR,EAASsB,GAAS,YAAclC,EAAYkC,IAM9D,GAAIlC,EAAYA,EAAYe,OAAS,IAAMjB,EACzCD,EAAOuB,KAAK,oEACP,GAAIpB,EAAYA,EAAYe,OAAS,IAAMhB,EAChDF,EAAOuB,KAAK,uDACP,CACL,IAAIsB,GAAc1C,EAAYA,EAAYe,OAAS,GAAKhB,GAAe,GACvEF,EAAOuB,KAAK,iBAAmBsB,EAAa,KAE9C,OAAO7C,EAGT,IAAM8C,EAAU,SAACC,GAAD,OAAYC,QAAQC,IAAI,SAAUF,EAAO7B,OAAQ,kBAwHlDjG,cArHb,SAAAA,EAAYiI,GAAO,IAAAC,EAAA,OAAAhG,OAAAiG,EAAA,EAAAjG,CAAAoB,KAAAtD,IACjBkI,EAAAhG,OAAAkG,EAAA,EAAAlG,CAAAoB,KAAApB,OAAAmG,EAAA,EAAAnG,CAAAlC,GAAAsI,KAAAhF,KAAM2E,KAMRM,SAPmB,eAAAC,EAAAtG,OAAAC,EAAA,EAAAD,CAAAE,EAAA1C,EAAA2C,KAOR,SAAAC,EAAAL,GAAA,IAAAwG,EAAAzE,EAAAK,EAAAD,EAAAE,EAAAC,EAAAmE,EAAA,OAAAtG,EAAA1C,EAAA+C,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAQ6F,EAARxG,EAAQwG,SACbzE,EAAMyE,EAASzE,IACfK,EAAWoE,EAASpE,SACpBD,EAAYqE,EAASrE,UACrBE,EAAamE,EAASnE,WACtBC,EAAYkE,EAASlE,UACrBmE,EAAUjE,EAAmBT,EAAKK,EAAUD,EAAWE,EAAYC,GAEvE2D,EAAKS,SAAS,CAAEC,YAAaF,EAAQ,GAAIG,YAAaH,EAAQ,GAAII,YAAaJ,EAAQ,GACrFK,YAAaL,EAAQ,GAAIM,YAAaN,EAAQ,GAAIO,YAAaP,EAAQ,GAAId,WAAYc,EAAQ,KATxFhG,EAAAE,KAAA,GAWHsG,EAAKT,GAXF,yBAAA/F,EAAAS,SAAAb,MAPQ,gBAAAc,GAAA,OAAAoF,EAAAnF,MAAAC,KAAAC,YAAA,GAAA2E,EAqBnBiB,SAAW,SAAAC,GAAwB,IAAtBX,EAAsBW,EAAtBX,SAAU5E,EAAYuF,EAAZvF,OAIrB,GAHAqE,EAAKS,SAAS,CAACF,aACfP,EAAKS,SAAS,CAAC9E,WAEW,MAAtB4E,EAASrE,UAAmB,CAW9B,IAVA,IAAIA,EAAYqE,EAASrE,UAErBiF,EAAQ,GAMRC,EAAa,CALD9H,EAAQ,KACVA,EAAQ,KACRA,EAAQ,KACRA,EAAQ,MAIbwE,EAAI,EAAGA,EAAIsD,EAAWrD,OAAQD,IAErC,IADA,IAAIzD,EAAO+G,EAAWtD,GACbE,EAAI,EAAGA,EAAI3D,EAAK0D,OAAQC,IAAK,CACpC,IAAIC,EAAO5D,EAAK2D,GAChB,GAAIC,EAAKE,gBAAgBkD,SAASnF,GAAY,CAC5C,IAAIoF,EAAQrD,EAAKE,gBAAgBoD,QAAQ,KACrCC,EAASvD,EAAKE,gBAAgBsD,UAAU,EAAGH,GAC1CH,EAAME,SAASG,EAAOE,SACzBP,EAAM/C,KAAKoD,IAMnB,IAAIG,EAAY,CACd/F,KAAM,SACNC,WAAY,CACVC,IAAK,CACHC,MAAO,OACPC,KAAM,CAAE,IAAK,IAAK,KAClBC,UAAW,CAAE,OAAQ,SAAU,QAEjCC,UAAW,CACTH,MAAO,aACPC,KAAMN,GAERS,SAAU,CACRJ,MAAO,aACPC,KAAMmF,GAER/E,WAAY,CACVL,MAAO,cACPC,KAAM,CAAE,EAAG,EAAG,GACdC,UAAW,CAAE,SAAU,SAAU,WAEnCI,UAAW,CACTN,MAAO,eACPC,KAAM,CAAE,aAAc,UAAW,UAAW,WAC5CC,UAAW,CAAE,aAAc,aAAc,aAAc,gBAG3DK,SAAU,CAAC,MAAO,WAAY,YAAa,aAAc,cAE3D0D,EAAKS,SAAS,CAAC9E,OAAQgG,MA7EzB3B,EAAK/H,MAAQ,CAAEyI,YAAa,KAAMC,YAAa,KAAMC,YAAa,KAAMC,YAAa,KACnFC,YAAa,KAAMC,YAAa,KAAMrB,WAAY,KAAMa,SAAU,KAAM5E,OAAQA,GAHjEqE,wEAoFjB,OACEzI,EAAAC,EAAAC,cAAA,OAAKmK,UAAU,aAAa1J,MAAOvB,GACjCY,EAAAC,EAAAC,cAAA,UAAQmK,UAAU,oBAAoB1J,MAAOqD,GAC3ChE,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMC,GAAG,KAAIJ,EAAAC,EAAAC,cAACG,EAAAJ,EAAD,CAAQK,QAAQ,kBAAhB,SAGfN,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,MAAIS,MAAOpB,GAAX,cACES,EAAAC,EAAAC,cAACoK,EAAArK,EAAD,CAAMmE,OAAQP,KAAKnD,MAAM0D,OACvB0E,SAAUjF,KAAKiF,SACfE,SAAUnF,KAAKnD,MAAMsI,SAErBU,SAAU7F,KAAK6F,SACftB,QAASA,IACXpI,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKS,MAAOsD,GAAZ,IAA2BJ,KAAKnD,MAAMyI,YAAtC,KACAnJ,EAAAC,EAAAC,cAAA,OAAKS,MAAOsD,GAAZ,IAA2BJ,KAAKnD,MAAM0I,YAAtC,KACApJ,EAAAC,EAAAC,cAAA,OAAKS,MAAOsD,GAAZ,IAA2BJ,KAAKnD,MAAM2I,YAAtC,KACArJ,EAAAC,EAAAC,cAAA,OAAKS,MAAOsD,GAAZ,IAA2BJ,KAAKnD,MAAM4I,YAAtC,KACAtJ,EAAAC,EAAAC,cAAA,OAAKS,MAAOsD,GAAZ,IAA2BJ,KAAKnD,MAAM6I,YAAtC,KACAvJ,EAAAC,EAAAC,cAAA,OAAKS,MAAOsD,GAAZ,IAA2BJ,KAAKnD,MAAM8I,YAAtC,KACAxJ,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKS,MAAOuD,GAAZ,IAA+BL,KAAKnD,MAAMyH,WAA1C,KACFnI,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,oBA/GegB,IAAMC,8BCzNzB5B,GAAc,CAChBwE,UAAW,SACXtE,MAAO,UACPC,WAAY,mCA8ED6K,oLAzEP,IAsCMzH,EAAOf,EAAQ,KAgBrB,OACI/B,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMC,GAAG,KAAIJ,EAAAC,EAAAC,cAACG,EAAAJ,EAAD,CAAQK,QAAQ,kBAAhB,SAGbN,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,MAAIS,MAAOpB,IAAX,kBACAS,EAAAC,EAAAC,cAACsK,GAAAvK,EAAD,CACI6C,KAAMA,EACN2H,QAjEI,CACZ,CACIC,KAAM,kBACNC,MAAO,YACPC,QAAS,CAAEC,QAAQ,EAAMC,MAAM,IAEnC,CACIJ,KAAM,MACNC,MAAO,MACPC,QAAS,CAAEC,QAAQ,EAAMC,MAAM,IAEnC,CACIJ,KAAM,aACNC,MAAO,aACPC,QAAS,CAAEC,QAAQ,EAAOC,MAAM,IAEpC,CACIJ,KAAM,UACNC,MAAO,aACPC,QAAS,CAAEC,QAAQ,EAAOC,MAAM,IAEpC,CACIJ,KAAM,UACNC,MAAO,aACPC,QAAS,CAAEC,QAAQ,EAAOC,MAAM,IAEpC,CACIJ,KAAM,UACNC,MAAO,aACPC,QAAS,CAAEC,QAAQ,EAAOC,MAAM,IAEpC,CACIJ,KAAM,OACNC,MAAO,OACPC,QAAS,CAAEC,QAAQ,EAAMC,MAAM,KAgC3BF,QA1BI,CACZG,WAAY,WACZC,WAAY,SACZC,eAAgB,QAChBC,MAAO,QACPC,SAAU,QACVC,gBAAiB,SAACC,GACd,OAAO,GAEXC,aAAc,SAACC,gBAnDJrK,IAAMC,WC8BdqK,oLA7BX,OACExL,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACuL,EAAA,EAAD,CAAOC,OAAO,EAAMC,KAAK,IAAIC,OAAQ,kBACnC5L,EAAAC,EAAAC,cAAA,OAAKmK,UAAU,OACbrK,EAAAC,EAAAC,cAAC2L,EAAD,UAGJ7L,EAAAC,EAAAC,cAACuL,EAAA,EAAD,CAAOC,OAAO,EAAMC,KAAK,OAAOC,OAAQ,kBACtC5L,EAAAC,EAAAC,cAAA,OAAKmK,UAAU,OACbrK,EAAAC,EAAAC,cAAC4L,EAAD,UAGJ9L,EAAAC,EAAAC,cAACuL,EAAA,EAAD,CAAOC,OAAO,EAAMC,KAAK,cAAcC,OAAQ,kBAC7C5L,EAAAC,EAAAC,cAAA,OAAKmK,UAAU,OACbrK,EAAAC,EAAAC,cAAC6L,EAAD,UAGJ/L,EAAAC,EAAAC,cAACuL,EAAA,EAAD,CAAOC,OAAO,EAAMC,KAAK,YAAYC,OAAQ,kBAC3C5L,EAAAC,EAAAC,cAAA,OAAKmK,UAAU,OACbrK,EAAAC,EAAAC,cAAC8L,GAAD,mBAtBI9K,IAAMC,WCEJ8K,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASV,OAAO5L,EAAAC,EAAAC,cAACqM,GAAD,MAAQC,SAASC,eAAe,SD2H1C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.2ade455a.chunk.js","sourcesContent":["import React from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {Link} from 'react-router-dom';\r\nimport { isAbsolute } from 'path';\r\n\r\nconst divStyle = {\r\n    //backgroundColor: '#94E1B0',\r\n    border: \"solid #8c1515\",\r\n    borderWidth: '4px',\r\n};\r\n\r\nconst headerStyle = {\r\n    top: '10%',\r\n    color: '#8c1515',\r\n    fontFamily: 'Open Sans Condensed, sans-serif',\r\n    //fontFamily: 'Futura Std Condensed Light, sans-serif',\r\n};\r\n\r\nconst buttonStyle = {\r\n    marginLeft: '10%',\r\n    marginRight: '10%',\r\n};\r\n\r\nconst footer2Style = {\r\n    marginLeft: '20%',\r\n    marginRight: '20%',\r\n};\r\n\r\nfunction ViewPastData() {\r\n    return (\r\n        <Link to=\"/pastdata\"><Button variant=\"outline-danger\">\r\n            View Past Data\r\n        </Button></Link>\r\n    )\r\n}\r\n\r\nfunction Calculator() {\r\n    return (\r\n        <Link to=\"/calculator\"><Button variant=\"outline-danger\">\r\n            Calculate Your Chances\r\n        </Button></Link>\r\n    )\r\n}\r\n\r\nfunction Faq() {\r\n    return (\r\n        <Link to=\"/faq\"><Button variant=\"outline-danger\">\r\n            FAQ\r\n        </Button></Link>\r\n    );\r\n}\r\n\r\nclass Home extends React.Component {\r\n    state = {\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={divStyle}>\r\n                <br />\r\n                <h1 style = {headerStyle}>\r\n                    MODELING THE DRAW\r\n                </h1>\r\n                <br />\r\n                <br />\r\n                <br />\r\n                <div style={buttonStyle}>\r\n                    <Grid\r\n                    container\r\n                    direction=\"row\"\r\n                    justify=\"space-around\"\r\n                    alignItems=\"center\">\r\n                        <ViewPastData />\r\n                        <Calculator />\r\n                        <Faq />\r\n                    </Grid>\r\n                </div>\r\n                <br />\r\n                <br />\r\n                <br />\r\n                <br />\r\n                <p style = {footer2Style}>\r\n                    Questions? Contact Charles Pan, Tiffany Shi, \r\n                    or Lily Zhou with your comments and concerns.\r\n                </p>\r\n                <br />\r\n                <br />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport {Link} from 'react-router-dom';\r\nimport './faq.css';\r\n\r\nconst headerStyle = {\r\n    fontFamily: 'Open Sans Condensed, sans-serif',\r\n    color: '#8c1515',\r\n};\r\n\r\nconst questionStyle = {\r\n    fontWeight: 'bold',\r\n    fontStyle: 'italic',\r\n    fontFamily: 'Glegoo, serif',\r\n    fontSize: '16px',\r\n    marginLeft: '3%',\r\n    marginRight: '3%',\r\n};\r\n\r\nconst answerStyle = {\r\n    marginLeft: '3%',\r\n    marginRight: '3%',\r\n};\r\n\r\nconst divStyle = {\r\n    //backgroundColor: '#95CCEB',\r\n    border: \"solid #8c1515\",\r\n    borderWidth: '4px',\r\n};\r\n\r\nfunction Question1() {\r\n    return (\r\n        <div>\r\n            <p style={questionStyle}>\r\n                What does Modeling the Draw use for its calculations?\r\n            </p>\r\n            <p style={answerStyle}>\r\n                Modeling the Draw uses historical cutoff numbers from previous Draws, \r\n                as reported by Stanford R&amp;DE. For the purposes of the calculator, \r\n                only the historical draw statistics from years 2014-2018 are considered. \r\n                Many academic themed, Greek, and all-frosh residences are excluded from \r\n                this dataset, and cannot be inputted into the calculator for an accurate \r\n                reading.\r\n            </p>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction Question2() {\r\n    return (\r\n        <div>\r\n            <p style={questionStyle}>\r\n                How does MTD calculate my chances?\r\n            </p>\r\n            <p style={answerStyle}>\r\n                Modeling the Draw uses linear regression on historical cut-off numbers \r\n                in order to estimate the cut-off numbers of Stanford residences for the \r\n                2019 Draw. Our calculator considers several factors in its calculation, \r\n                including sex, desired residence, desired type of room, the number of \r\n                people you're drawing with, and your tier number.\r\n            </p>\r\n            <p style={answerStyle}>\r\n                In the case of split groups – where some but not all students with a \r\n                certain cut-off number can make it into a certain residence – the \r\n                calculator assumes that you will be able to make the cut-off. Additionally, \r\n                sophomore priority for residences such as Toyon and FroSoCo are not \r\n                considered by the calculator.\r\n            </p>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction Question3() {\r\n    return (\r\n        <div>\r\n            <p style={questionStyle}>\r\n                What inputs does the calculator take, and what do they mean?\r\n            </p>\r\n            <p style={answerStyle}>\r\n                The first input, sex, will allow the calculator to consider either the \r\n                men’s or women’s historical cut-off numbers.\r\n            </p>\r\n            <p style={answerStyle}>\r\n                The second input, residence, is the residence that you’re considering drawing into. \r\n                You could input a particular residence (e.g. “Branner”), a residence hall (e.g. \r\n                “Gerhard Casper”), a part of campus (e.g. “West Campus”), or any dorm at Stanford (“Dorm”).\r\n            </p>\r\n            <p style={answerStyle}>\r\n                The third input, room type, is the type of room that you’d like to draw into (ex: \"1 Room Single\",\r\n                \"2 Room Double\"). The calculator will automatically update the dropdown options\r\n                to only show the room types that are offered in your residence. Please note that the availability\r\n                of room types could also hinge on other factors (i.e. sex and apply type). If you have no preference \r\n                for your room type, input “Any.”\r\n\r\n            </p>\r\n            <p style={answerStyle}>\r\n                The fourth input, tier number, is the tier level that you are selecting.\r\n            </p>\r\n            <p style={answerStyle}>\r\n                The last input, apply type, is the number of people drawing with you \r\n                as a group. Since our calculator only calculates your chances for the \r\n                2019 Draw, groups of 5 or greater or not recognized.\r\n            </p>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction Question4() {\r\n    return (\r\n        <div>\r\n            <p style={questionStyle}>\r\n                What does my outputted percentage mean?</p>\r\n            <p style={answerStyle}>\r\n                The percentage that the Modeling the Draw calculator outputs is our \r\n                estimate of your chances of drawing into the residence and room type \r\n                that you’re applying for, based on historical draw data from previous \r\n                years. If you receive the output “>99%,” it’s likely that your tier \r\n                level is lower than our estimated cutoff number for your residence. If \r\n                you receive the output “&#60;0.1%,” it’s likely that your tier level is \r\n                higher than our estimated cutoff number for your residence.\r\n            </p>\r\n        </div>\r\n    );\r\n}\r\n\r\nclass FAQ extends React.Component {\r\n    render() {\r\n        return (\r\n            <div style={divStyle}>\r\n                <br />\r\n                <Link to=\"/\"><Button variant=\"outline-danger\">\r\n                    Back\r\n                </Button></Link>\r\n                <br />\r\n                <br />\r\n                <h1 style={headerStyle}>\r\n                    Frequently Asked Questions\r\n                </h1>\r\n                <br />\r\n                <Question1 />\r\n                <br />\r\n                <Question2 />\r\n                <br />\r\n                <Question3 />\r\n                <br />\r\n                <Question4 />\r\n                <br />\r\n                <p style={answerStyle}>\r\n                    Contact lilyzhou@stanford.edu and dgrosz@stanford.edu for further inquiries.\r\n                </p>\r\n            </div>\r\n \r\n        );\r\n    }\r\n}\r\n\r\nexport default FAQ;","var firebase = require('firebase/app');\r\nrequire(\"firebase/firestore\");\r\n\r\nconst config = {\r\n    apiKey: \"AIzaSyDWreJfi_oPfo2JsGimL8jK9gO2j3KXlIQ\",\r\n    authDomain: \"tsd-data-viz.firebaseapp.com\",\r\n    databaseURL: \"https://tsd-data-viz.firebaseio.com\",\r\n    projectId: \"tsd-data-viz\",\r\n    storageBucket: \"tsd-data-viz.appspot.com\",\r\n    messagingSenderId: \"149492626063\"\r\n};\r\nfirebase.initializeApp(config);\r\n\r\nexport default async (data) => {\r\n    var db = firebase.firestore();\r\n    await db.collection(\"modeling-the-draw-2019\").add({...data, date: new Date()});\r\n}","import React, { Component } from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport {Link} from 'react-router-dom';\r\nimport Form from \"react-jsonschema-form\";\r\nimport save from \"./store\";\r\n\r\nconst divStyle = {\r\n  marginLeft: '20%', \r\n  marginRight: '20%', \r\n  border: \"solid #8c1515\", \r\n  borderWidth: '4px',\r\n}\r\n\r\nconst headerStyle = {\r\n  textAlign: 'center', \r\n  color: '#8c1515', \r\n  fontFamily: 'Open Sans Condensed, sans-serif',\r\n};\r\n\r\nconst calculatorStyle = {\r\n  marginLeft: '20%', \r\n  marginRight: '20%',\r\n};\r\n\r\nconst cutoffStyle = {\r\n  fontSize: '20px', \r\n  textAlign: 'center',\r\n};\r\n\r\nconst percentageStyle = {\r\n  fontSize: '22px', \r\n  textAlign: 'center',\r\n}\r\n\r\nconst allResidencesArray = [ \"576 Alvarado\", \"680 Lomita\", \"Adelfa\", \"BOB\", \"Branner\", \"Cardenal\", \"Castano\", \"CCTH\", \"Columbae\", \r\n\"Crothers\", \"Dorm\", \"Durand\", \"EAST\", \"East Campus\", \"East FloMo\", \"EBF\", \"Eucalipto\", \"Faisan\", \r\n\"FloMo\", \"French House\", \"FroSoCo\", \"Gavilan\", \"Gerhard Casper Quad\", \"Gov Co\", \"Granada\", \"Grove\", \r\n\"Hammarskjold\", \"Haus Mitteleuropa\", \"Humanities House\", \"Jerry\", \"Kairos\", \"Kimball\", \"Lagunita\", \r\n\"Lantana\", \"La Casa Italiana\", \"Loro\", \"Lower Row Self Op\", \"Mars\", \"Meier\", \"Mirlo\", \"Mirrielees\", \r\n\"Muwekma\", \"Murray\", \"Naranja\", \"Narnia\", \"Norcliffe\", \"Okada\", \"Outdoor House\", \"Paloma\", \"Phi Sigma\", \r\n\"Pluto\", \"Potter\", \"Residence\", \"Robinson\", \"Roble\", \"Roth\", \"Self Op\", \"Self Op Lake\", \r\n\"Slavianskii Dom\", \"SterQuad\", \"Storey\", \"Suites\", \"Synergy\", \"Terra\", \"Toyon\", \"Trancos\", \"Ujamaa\", \r\n\"Upper Row Self Op\", \"West Campus\", \"West FloMo\", \"Xanadu\", \"Yost\", \"ZAP\", \"Zapata\"];\r\n\r\nconst schema = {\r\n  type: \"object\",\r\n  properties: {\r\n    sex: {\r\n      title: \"Sex:\",\r\n      enum: [ \"m\", \"f\", \"n\" ],\r\n      enumNames: [ \"Male\", \"Female\", \"N/A\" ]\r\n    },\r\n    residence: {\r\n      title: \"Residence:\",\r\n      enum: allResidencesArray,\r\n    },\r\n    roomtype: {\r\n      title: \"Room Type:\",\r\n      enum: [ \"1 Room Single\", \"1 Room Double\", \"1 Room Double (focus)\", \"2 Room Double\", \"2 Room Double (focus)\", \r\n      \"1 Room Triple\", \"1 Room Quad\", \"4-room\", \"6-room\", \"Standard\", \"Premier\", \"Substance Free Housing\", \r\n      \"Ethnic (B)\", \"Ethnic (I)\", \"Ethnic (N)\", \"Ethnic (C)\", \"Ethnic (A)\", \"Double\", \"Triple\", \"Quad\", \"Any\" ],\r\n      enumNames: [ \"1 Room Single\", \"1 Room Double\", \"1 Room Double (Focus)\", \"2 Room Double\", \"2 Room Double (Focus)\", \r\n        \"1 Room Triple\", \"1 Room Quad\", \"Four-Person Suite\", \"Six-Person Suite\", \"Standard Room\", \"Premier Room\", \r\n        \"Substance Free Housing\", \"Ethnic Housing (Ujamaa)\", \"Ethnic Housing (Hammarskjold)\", \r\n        \"Ethnic Housing (Muwekma)\", \"Ethnic Housing (Zapata)\", \"Ethnic Housing (Okada)\", \"2 Bedroom Apartment\", \r\n        \"3 Bedroom Apartment\", \"4 Bedroom Apartment\", \"Any\" ],\r\n    },\r\n    tiernumber: {\r\n      title: \"Tier Level:\",\r\n      enum: [ 1, 2, 3],\r\n      enumNames: [ \"Tier 1\", \"Tier 2\", \"Tier 3\" ]\r\n    },\r\n    applytype: {\r\n      title: \"Group Size: \",\r\n      enum: [ \"individual\", \"group_2\", \"group_3\", \"group_4\" ],\r\n      enumNames: [ \"Individual\", \"Group of 2\", \"Group of 3\", \"Group of 4\" ]\r\n    }\r\n  },\r\n  required: [\"sex\", \"roomtype\", \"residence\", \"tiernumber\", \"applytype\"],\r\n};\r\n\r\nfunction findLeastSquares(x_values, y_values) {\r\n  let x_sum = 0;\r\n  let y_sum = 0;\r\n  let xsq_sum = 0;\r\n  let xy_sum = 0;\r\n  let count = 0;\r\n  for (let i = 0; i < x_values.length; i++) {\r\n    let x = x_values[i];\r\n    let y = y_values[i];\r\n    x_sum += x;\r\n    y_sum += y;\r\n    xsq_sum += (x * x);\r\n    xy_sum += (x * y);\r\n    count++;\r\n  }\r\n  let aValue = ( (count * xy_sum) - (x_sum * y_sum) ) / ( (count * xsq_sum) - (x_sum * x_sum) );\r\n  let bValue = ( (y_sum * xsq_sum) - (x_sum * xy_sum) ) / ( (count * xsq_sum) - (x_sum * x_sum) );\r\n  return [aValue, bValue];  \r\n}\r\n\r\nfunction processTrends(gender, typeCol, resID, des_year) {\r\n  let data_1718 = require('./housingData1718.json');\r\n  let data_16 = require('./housingData16.json');\r\n  let data_15 = require('./housingData15.json');\r\n  let data_14 = require('./housingData14.json');\r\n\r\n  let cutoffs = [];\r\n  let cutoffsStr = [];\r\n  let yearList = [2014, 2015, 2016, 2017, 2018];\r\n\r\n  let foundCutoff = false;\r\n  let currData;\r\n  for (let i = 0; i < yearList.length; i++) {\r\n    switch (yearList[i]) {\r\n      case 2014:\r\n        currData = data_14;\r\n        break;\r\n      case 2015:\r\n        currData = data_15;\r\n        break;\r\n      case 2016:\r\n        currData = data_16;\r\n        break;\r\n      default:\r\n        currData = data_1718;\r\n    }\r\n    foundCutoff = false;\r\n    for (let j = 0; j < currData.length; j++) {\r\n      let item = currData[j];\r\n      if (item.year == yearList[i] && (gender == \"n\" || item.sex == gender) && item.res_name_edited == resID) {\r\n        foundCutoff = true;\r\n        switch (typeCol) {\r\n          case \"individual\":\r\n            cutoffs.push(item.individual);\r\n            cutoffsStr.push(item.individual);\r\n            break;\r\n          case \"group_2\":\r\n            cutoffs.push(item.group_2);\r\n            cutoffsStr.push(item.group_2);\r\n            break;\r\n          case \"group_3\":\r\n            cutoffs.push(item.group_3);\r\n            cutoffsStr.push(item.group_3);\r\n            break;\r\n          case \"group_4\":\r\n            cutoffs.push(item.group_4);\r\n            cutoffsStr.push(item.group_4);\r\n        }\r\n        if (cutoffs[cutoffs.length - 1] == \"\" || cutoffs[cutoffs.length - 1] == null) {\r\n          cutoffs.pop();\r\n          yearList.splice(i, 1);\r\n          i--;\r\n          cutoffsStr[cutoffsStr.length - 1] = \"N/A\";\r\n        }\r\n        break;\r\n      }\r\n    }\r\n    if (!foundCutoff) {\r\n      yearList.splice(i, 1);\r\n      i--;\r\n      cutoffsStr.push(\"N/A\");\r\n    }\r\n  }\r\n\r\n  if (cutoffs.length == 0) {\r\n    return \"Invalid input\";\r\n  } else if (cutoffs.length == 1) {\r\n    return cutoffs[0];\r\n  } else if (cutoffs.length > 1 && yearList.length == cutoffs.length) {\r\n    const ls_model = findLeastSquares(yearList, cutoffs);\r\n    let cutoff2019 = Math.round(ls_model[0] * des_year + ls_model[1]);\r\n    if (cutoff2019 < 0) {\r\n      cutoff2019 = 1;\r\n    } else if (cutoff2019 > 3000) {\r\n      cutoff2019 = 3000;\r\n    }\r\n    cutoffsStr.push(cutoff2019);\r\n    return cutoffsStr;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction processSingleQuery(gender_raw, roomType_raw, resName_raw, tierNum_raw, applyType_raw) {\r\n  let gender = gender_raw;\r\n  let roomType = roomType_raw;\r\n  const resID = roomType + \",\" + resName_raw;\r\n  let typeCol = applyType_raw;\r\n  const tierNum = tierNum_raw;\r\n\r\n  let output = [];\r\n  //find percentage\r\n  const score_ceiling = tierNum * 1000;\r\n  const score_floor = score_ceiling - 999;\r\n  const cutoffsList = processTrends(gender, typeCol, resID, 2019);\r\n  \r\n  //print out previous cutoffs\r\n  let yearList = [2014, 2015, 2016, 2017, 2018, 2019];\r\n  if (cutoffsList.length == yearList.length) {\r\n    for (let count = 0; count < yearList.length; count++) {\r\n      if (count == yearList.length - 1) {\r\n        output.push(yearList[count] + \" estimated cutoff: \" + cutoffsList[count]);\r\n      } else {\r\n        output.push(yearList[count] + \" cutoff: \" + cutoffsList[count]);\r\n      }\r\n    }\r\n  }\r\n\r\n  //print out percentage\r\n  if (cutoffsList[cutoffsList.length - 1] >= score_ceiling) {\r\n    output.push(\"Your Chances: >99% – You're an (almost) guaranteed in!\");\r\n  } else if (cutoffsList[cutoffsList.length - 1] <= score_floor) {\r\n    output.push(\"Your Chances: <0.1% – Good luck with that!\");\r\n  } else {\r\n    let percentage = (cutoffsList[cutoffsList.length - 1] - score_floor) / 10;\r\n    output.push(\"Your Chances: \" + percentage + \"%\");\r\n  }\r\n  return output;\r\n}\r\n\r\nconst onError = (errors) => console.log('I have', errors.length, 'errors to fix');\r\n\r\nclass Calculator extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { cutoff_2014: null, cutoff_2015: null, cutoff_2016: null, cutoff_2017: null,\r\n      cutoff_2018: null, cutoff_2019: null, percentage: null, formData: null, schema: schema\r\n    }\r\n  }\r\n\r\n  onSubmit = async ({formData}) => {\r\n    let sex = formData.sex;\r\n    let roomtype = formData.roomtype;\r\n    let residence = formData.residence;\r\n    let tiernumber = formData.tiernumber;\r\n    let applytype = formData.applytype;\r\n    let results = processSingleQuery(sex, roomtype, residence, tiernumber, applytype);\r\n\r\n    this.setState({ cutoff_2014: results[0], cutoff_2015: results[1], cutoff_2016: results[2],\r\n      cutoff_2017: results[3], cutoff_2018: results[4], cutoff_2019: results[5], percentage: results[6]\r\n    });\r\n    await save(formData);\r\n  }\r\n\r\n  onChange = ({formData, schema}) => {\r\n    this.setState({formData});\r\n    this.setState({schema});\r\n\r\n    if (formData.residence != null) {\r\n      let residence = formData.residence;\r\n    \r\n      let array = [];\r\n      let data_1718 = require('./housingData1718.json');\r\n      let data_16 = require('./housingData16.json');\r\n      let data_15 = require('./housingData15.json');\r\n      let data_14 = require('./housingData14.json');\r\n\r\n      let dataArrays = [data_1718, data_16, data_15, data_14];\r\n\r\n      for (let i = 0; i < dataArrays.length; i++) {\r\n        let data = dataArrays[i];\r\n        for (let j = 0; j < data.length; j++) {\r\n          let item = data[j];\r\n          if (item.res_name_edited.includes(residence)) {\r\n            let index = item.res_name_edited.indexOf(',');\r\n            let newStr = item.res_name_edited.substring(0, index);\r\n            if (!array.includes(newStr.trim())) {\r\n              array.push(newStr);\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      let newSchema = {\r\n        type: \"object\",\r\n        properties: {\r\n          sex: {\r\n            title: \"Sex:\",\r\n            enum: [ \"m\", \"f\", \"n\" ],\r\n            enumNames: [ \"Male\", \"Female\", \"N/A\" ]\r\n          },\r\n          residence: {\r\n            title: \"Residence:\",\r\n            enum: allResidencesArray,\r\n          },\r\n          roomtype: {\r\n            title: \"Room Type:\",\r\n            enum: array,\r\n          },\r\n          tiernumber: {\r\n            title: \"Tier Level:\",\r\n            enum: [ 1, 2, 3],\r\n            enumNames: [ \"Tier 1\", \"Tier 2\", \"Tier 3\" ]\r\n          },\r\n          applytype: {\r\n            title: \"Group Size: \",\r\n            enum: [ \"individual\", \"group_2\", \"group_3\", \"group_4\" ],\r\n            enumNames: [ \"Individual\", \"Group of 2\", \"Group of 3\", \"Group of 4\" ]\r\n          }\r\n        },\r\n        required: [\"sex\", \"roomtype\", \"residence\", \"tiernumber\", \"applytype\"],\r\n      }\r\n      this.setState({schema: newSchema});\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Calculator\" style={divStyle}>\r\n        <header className=\"Calculator-header\" style={calculatorStyle}>\r\n          <br />\r\n            <Link to=\"/\"><Button variant=\"outline-danger\">\r\n              Back\r\n            </Button></Link>\r\n          <br />\r\n          <br />\r\n          <h1 style={headerStyle}>Calculator</h1>\r\n            <Form schema={this.state.schema}\r\n              onSubmit={this.onSubmit}\r\n              formData={this.state.formData}\r\n              //onChange={({formData}) => this.setState({formData}) }\r\n              onChange={this.onChange}\r\n              onError={onError} />\r\n            <br />\r\n            <div style={cutoffStyle}> {this.state.cutoff_2014} </div>\r\n            <div style={cutoffStyle}> {this.state.cutoff_2015} </div>\r\n            <div style={cutoffStyle}> {this.state.cutoff_2016} </div>\r\n            <div style={cutoffStyle}> {this.state.cutoff_2017} </div>\r\n            <div style={cutoffStyle}> {this.state.cutoff_2018} </div>\r\n            <div style={cutoffStyle}> {this.state.cutoff_2019} </div>\r\n            <br />\r\n            <div style={percentageStyle}> {this.state.percentage} </div> \r\n          <br />\r\n          <br />\r\n        </header>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Calculator;","import React from 'react';\r\nimport MUIDataTable from 'mui-datatables';\r\nimport Button from 'react-bootstrap/Button';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst headerStyle = {\r\n    textAlign: 'center',\r\n    color: '#8c1515',\r\n    fontFamily: 'Open Sans Condensed, sans-serif',\r\n};\r\n\r\nclass PastData extends React.Component {\r\n    render() {\r\n        const columns = [\r\n            {\r\n                name: \"res_name_edited\",\r\n                label: \"Residence\",\r\n                options: { filter: true, sort: true }\r\n            },\r\n            {\r\n                name: \"sex\",\r\n                label: \"Sex\",\r\n                options: { filter: true, sort: false }\r\n            },\r\n            {\r\n                name: \"individual\",\r\n                label: \"Individual\",\r\n                options: { filter: false, sort: true }\r\n            },\r\n            {\r\n                name: \"group_2\",\r\n                label: \"Group of 2\",\r\n                options: { filter: false, sort: true }\r\n            },\r\n            {\r\n                name: \"group_3\",\r\n                label: \"Group of 3\",\r\n                options: { filter: false, sort: true }\r\n            },\r\n            {\r\n                name: \"group_4\",\r\n                label: \"Group of 4\",\r\n                options: { filter: false, sort: true }\r\n            },\r\n            {\r\n                name: \"year\",\r\n                label: \"Year\",\r\n                options: { filter: true, sort: true }\r\n            }\r\n        ];\r\n\r\n        const data = require('./housingData_all.json');\r\n\r\n        const options = {\r\n            filterType: 'checkbox',\r\n            responsive: 'scroll',\r\n            selectableRows: 'false',\r\n            print: 'false',\r\n            download: 'false',\r\n            isRowSelectable: (dataIndex) => {\r\n                return false;\r\n            },\r\n            onRowsDelete: (rowsDeleted) => {\r\n                return;\r\n            }\r\n        };\r\n\r\n        return (\r\n            <div>\r\n                <br />\r\n                <Link to=\"/\"><Button variant=\"outline-danger\">\r\n                    Back\r\n                </Button></Link>\r\n                <br />\r\n                <br />\r\n                <h1 style={headerStyle}>View Past Data</h1>\r\n                <MUIDataTable\r\n                    data={data}\r\n                    columns={columns}\r\n                    options={options}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PastData;","import React, { Component } from 'react';\r\nimport {HashRouter, Route} from 'react-router-dom';\r\nimport './index.css';\r\nimport './App.css';\r\nimport Home from './home';\r\nimport FAQ from './faq';\r\nimport Calculator from './calculator';\r\nimport PastData from './pastdata';\r\n//import * as serviceWorker from './serviceWorker';\r\n\r\nclass App extends React.Component {\r\n  render() {\r\n    return (\r\n      <HashRouter>\r\n        <div>\r\n          <Route exact={true} path='/' render={() => (\r\n            <div className=\"App\">\r\n              <Home />\r\n            </div>\r\n          )} />\r\n          <Route exact={true} path='/faq' render={() => (\r\n            <div className=\"App\">\r\n              <FAQ />\r\n            </div>\r\n          )} />\r\n          <Route exact={true} path='/calculator' render={() => (\r\n            <div className=\"App\">\r\n              <Calculator />\r\n            </div>\r\n          )} />\r\n          <Route exact={true} path='/pastdata' render={() => (\r\n            <div className=\"App\">\r\n              <PastData />\r\n            </div>\r\n          )} />\r\n        </div>\r\n      </HashRouter>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App/>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}