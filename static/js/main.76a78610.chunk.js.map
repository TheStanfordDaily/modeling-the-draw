{"version":3,"sources":["home.js","faq.js","calculator.js","pastdata.js","App.js","serviceWorker.js","index.js"],"names":["divStyle","border","borderWidth","headerStyle","top","color","fontFamily","buttonStyle","marginLeft","marginRight","footerStyle","textAlign","fontWeight","footer2Style","ViewPastData","react_default","a","createElement","Button_default","variant","href","Calculator","Faq","Home","state","style","home_Calculator","React","Component","questionStyle","fontStyle","fontSize","answerStyle","Question1","Question2","Question3","Question4","FAQ","calculatorStyle","schema","type","required","properties","sex","title","roomtype","residence","tiernumber","maxLength","applytype","processSingleQuery","gender_raw","roomType_raw","resName_raw","tierNum_raw","applyType_raw","gender","roomType","typeCol","resID","score_ceiling","score_floor","cutoff","des_year","currData","data_1718","require","data_16","data_15","data_14","cutoffs","yearList","foundCutoff","i","length","j","item","year","res_name_edited","push","individual","group_2","group_3","group_4","pop","splice","ls_model","x_values","y_values","x_sum","y_sum","xsq_sum","xy_sum","count","x","y","findLeastSquares","Math","round","processTrends","onError","errors","console","log","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onSubmit","_ref","formData","setState","results","className","lib_default","onChange","bind","concat","PastData","data","dist_default","columns","name","label","options","filter","sort","filterType","responsive","App","react_router_dom","react_router","exact","path","render","home","src_faq","calculator","pastdata","Boolean","window","location","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.76a78610.chunk.js","sourcesContent":["import React from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { isAbsolute } from 'path';\r\n\r\nconst divStyle = {\r\n    //backgroundColor: '#94E1B0',\r\n    border: \"solid #8c1515\",\r\n    borderWidth: '4px',\r\n};\r\n\r\nconst headerStyle = {\r\n    top: '10%',\r\n    color: '#8c1515',\r\n    fontFamily: 'Open Sans Condensed, sans-serif',\r\n    //fontFamily: 'Futura Std Condensed Light, sans-serif',\r\n};\r\n\r\nconst buttonStyle = {\r\n    marginLeft: '10%',\r\n    marginRight: '10%',\r\n};\r\n\r\nconst footerStyle = {\r\n    textAlign: 'center',\r\n    fontFamily: 'Bad Script, cursive',\r\n    fontWeight: 'bold',\r\n};\r\n\r\nconst footer2Style = {\r\n    marginLeft: '20%',\r\n    marginRight: '20%',\r\n};\r\n\r\nfunction ViewPastData() {\r\n    return (\r\n        <Button variant=\"outline-danger\" href=\"pastdata\">\r\n            View Past Data\r\n        </Button>\r\n    )\r\n}\r\n\r\nfunction Calculator() {\r\n    return (\r\n        <Button variant=\"outline-danger\" href=\"calculator\">\r\n            Calculate Your Chances\r\n        </Button>\r\n    )\r\n}\r\n\r\nfunction Faq() {\r\n    return (\r\n        <Button variant=\"outline-danger\" href=\"faq\">\r\n            FAQ\r\n        </Button>\r\n    );\r\n}\r\n\r\nclass Home extends React.Component {\r\n    state = {\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={divStyle}>\r\n                <br />\r\n                <h1 style = {headerStyle}>\r\n                    MODELING THE DRAW\r\n                </h1>\r\n                <br />\r\n                <div style={buttonStyle}>\r\n                    <ViewPastData />\r\n                    <Calculator />\r\n                    <Faq />\r\n                </div>\r\n                <br />\r\n                <br />\r\n                <br />\r\n                <p style = {footerStyle}>\r\n                    Sponsored by the Stanford Daily Tech Team\r\n                </p>\r\n                <br />\r\n                <p style = {footer2Style}>\r\n                    Questions? Email Charles Pan, Tiffany Shi, \r\n                    or Lily Zhou with your comments and concerns.\r\n                </p>\r\n                <br />\r\n                <br />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;\r\n\r\n/*\r\n<Grid\r\ncontainer\r\ndirection=\"row\"\r\njustify=\"space-around\"\r\nalignItems=\"center\">\r\n*/","import React from 'react';\r\nimport './faq.css';\r\n\r\nconst headerStyle = {\r\n    fontFamily: 'Open Sans Condensed, sans-serif',\r\n    color: '#8c1515',\r\n};\r\n\r\nconst questionStyle = {\r\n    fontWeight: 'bold',\r\n    fontStyle: 'italic',\r\n    fontFamily: 'Glegoo, serif',\r\n    fontSize: '16px',\r\n    marginLeft: '3%',\r\n    marginRight: '3%',\r\n};\r\n\r\nconst answerStyle = {\r\n    marginLeft: '3%',\r\n    marginRight: '3%',\r\n};\r\n\r\nconst divStyle = {\r\n    //backgroundColor: '#95CCEB',\r\n    border: \"solid #8c1515\",\r\n    borderWidth: '4px',\r\n};\r\n\r\nfunction Question1() {\r\n    return (\r\n        <div>\r\n            <p style={questionStyle}>\r\n                What does Modeling the Draw use for its calculations?\r\n            </p>\r\n            <p style={answerStyle}>\r\n                Modeling the Draw utilizes historical cutoff numbers from previous Draws, as reported by \r\n                Stanford R&amp;DE. For the purposes of the calculator, statistics from the years 2014-2018 \r\n                are taken into consideration. Many academic theme, Greek, and all-frosh residences are excluded \r\n                from this dataset, and cannot be inputted into the calculator for an accurate reading.\r\n            </p>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction Question2() {\r\n    return (\r\n        <div>\r\n            <p style={questionStyle}>\r\n                How does MTD calculate my chances?\r\n            </p>\r\n            <p style={answerStyle}>\r\n                Modeling the Draw uses linear regression on historical cut-off numbers in order to determine the \r\n                trend of popularity of various residences that partake in the 2019 Draw. Aside from the desired \r\n                residence, several other factors – such as sex, desired type of room, the number of people \r\n                applying in your group, and tier number – impact your chances of drawing into the residence.\r\n            </p>\r\n            <p style={answerStyle}>\r\n                In the case of split groups – where some but not all students with a certain cut-off number could\r\n                make it into a particular residence – the calculator assumes that you are able to make the \r\n                cut-off. Additionally, sophomore priority for particular residences and housing types – such \r\n                as Toyon and FroSoCo – are not considered for the purposes of this calculator.\r\n            </p>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction Question3() {\r\n    return (\r\n        <div>\r\n            <p style={questionStyle}>\r\n                What inputs does the calculator take, and what do they mean?\r\n            </p>\r\n            <p style={answerStyle}>\r\n                The first input, sex, will allow the calculator to consider either the men’s or women’s cut-off\r\n                numbers, and which correspond to the inputs “male” or “female”; for any other input, the \r\n                calculator will not consider sex in its calculation.\r\n            </p>\r\n            <p style={answerStyle}>\r\n                The second input, room type, refers to the type of room that you’d like to be placed in, and \r\n                recognizes inputs such as “1 room single,” “2 room double,” and “1 room triple.” Please note \r\n                that not all residences have your desired room type; inputting an invalid room type for \r\n                a residence will not lead to an accurate calculation. Additionally, for apartment complexes \r\n                such as Mirrielees, you may request either a “2 bedroom apartment,” “3 bedroom apartment,” \r\n                “4 bedroom apartment,” or “substance free housing.” Similarly, you should request either a \r\n                “4-person” or “6-person” suite for GovCo’s Suites, and either a “standard room” or “premier \r\n                room” for Row residences. If you’re considering preassigning to a cross cultural theme house, \r\n                you must input “ETHNIC” as the room type. Lastly, if you have no preference for the room type, \r\n                input “Any.”\r\n            </p>\r\n            <p style={answerStyle}>\r\n                The third input, residence, refers to the residence that you’re considering drawing into. You \r\n                may input a particular residence (“Branner”), a residence hall (“Gerhard Casper”), a part of \r\n                campus (“West Campus”), or any dorm (“Dorm”).\r\n            </p>\r\n            <p style={answerStyle}>\r\n                The fourth input, tier number, will take either 1, 2, or 3 as input, and refer to the tier \r\n                level that you are selecting. Other inputs are not recognized by the calculator.\r\n            </p>\r\n            <p style={answerStyle}>\r\n                The last input, apply type, refers to the number of people applying in your group. Recognized \r\n                inputs include “individual,” “group of 2,” “group of 3,” or “group or 4.” Since our calculator \r\n                calculates your chances for the 2019 draw, groups of 5 or greater or not recognized.\r\n            </p>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction Question4() {\r\n    return (\r\n        <div>\r\n            <p style={questionStyle}>\r\n                What does the outputted percentage mean?</p>\r\n            <p style={answerStyle}>\r\n                The percentage that the Modeling the Draw calculator outputs is our estimate of your chances \r\n                of drawing into the residence and room type that you’re applying for, based on data from \r\n                previous years. If you receive the output “>99%,” it’s likely that your tier level exceeds \r\n                the historical cut-off numbers. If you receive the output “&#60;0.1%,” it’s likely that your tier \r\n                level is lower than the historical cut-off numbers.\r\n            </p>\r\n        </div>\r\n    );\r\n}\r\n\r\nclass FAQ extends React.Component {\r\n    render() {\r\n        return (\r\n            <div style={divStyle}>\r\n                <br />\r\n                <h1 style={headerStyle}>\r\n                    Frequently Asked Questions\r\n                </h1>\r\n                <br />\r\n                <Question1 />\r\n                <br />\r\n                <Question2 />\r\n                <br />\r\n                <Question3 />\r\n                <br />\r\n                <Question4 />\r\n                <br />\r\n                <p style={answerStyle}>\r\n                    Contact lilyzhou@stanford.edu for further inquiries.\r\n                </p>\r\n                <br />\r\n            </div>\r\n \r\n        );\r\n    }\r\n}\r\n\r\nexport default FAQ;","import React, { Component } from 'react';\r\nimport Form from \"react-jsonschema-form\";\r\n\r\nconst divStyle = {\r\n  //backgroundColor: '#F7ADBB',\r\n  marginLeft: '20%',\r\n  marginRight: '20%',\r\n  border: \"solid #8c1515\",\r\n  borderWidth: '4px',\r\n}\r\n\r\nconst headerStyle = {\r\n  textAlign: 'center',\r\n  color: '#8c1515',\r\n  fontFamily: 'Open Sans Condensed, sans-serif',\r\n};\r\n\r\nconst calculatorStyle = {\r\n  marginLeft: '20%',\r\n  marginRight: '20%',\r\n};\r\n\r\nconst answerStyle = {\r\n  fontSize: '20px',\r\n};\r\n\r\nconst schema = {\r\n  //title: \"Calculator\",\r\n  type: \"object\",\r\n  required: [\"sex\", \"roomtype\", \"residence\", \"tiernumber\", \"applytype\"],\r\n  properties: {\r\n    sex: {\r\n      type: \"string\", \r\n      title: \"Sex:\"\r\n    },\r\n    roomtype: {\r\n      type: \"string\", \r\n      title: \"Room Type:\"\r\n    },\r\n    residence: {\r\n      type: \"string\", \r\n      title: \"Residence:\"\r\n    },\r\n    tiernumber: {\r\n      type: \"integer\", \r\n      title: \"Tier Level:\",\r\n      maxLength: 1\r\n    },\r\n    applytype: {\r\n      type: \"string\",\r\n      title: \"Group Size: \"\r\n    }\r\n  }\r\n};\r\n\r\nfunction findLeastSquares(x_values, y_values) {\r\n  let x_sum = 0;\r\n  let y_sum = 0;\r\n  let xsq_sum = 0;\r\n  let xy_sum = 0;\r\n  let count = 0;\r\n\r\n  for (let i = 0; i < x_values.length; i++) {\r\n    let x = x_values[i];\r\n    let y = y_values[i];\r\n\r\n    x_sum += x;\r\n    y_sum += y;\r\n    xsq_sum += (x * x);\r\n    xy_sum += (x * y);\r\n    count++;\r\n  }\r\n\r\n  let aValue = ( (count * xy_sum) - (x_sum * y_sum) ) / ( (count * xsq_sum) - (x_sum * x_sum) );\r\n  let bValue = ( (y_sum * xsq_sum) - (x_sum * xy_sum) ) / ( (count * xsq_sum) - (x_sum * x_sum) );\r\n\r\n  return [aValue, bValue];  \r\n}\r\n\r\nfunction processTrends(gender, typeCol, resID, des_year) {\r\n  const data_1718 = require('./housingData1718.json');\r\n  const data_16 = require('./housingData16.json');\r\n  const data_15 = require('./housingData15.json');\r\n  const data_14 = require('./housingData14.json');\r\n\r\n  let cutoffs = [];\r\n  let yearList = [2014, 2015, 2016, 2017, 2018];\r\n\r\n  let foundCutoff = false;\r\n\r\n  let currData;\r\n  for (let i = 0; i < yearList.length; i++) {\r\n    switch (yearList[i]) {\r\n      case 2014:\r\n        currData = data_14;\r\n        break;\r\n      case 2015:\r\n        currData = data_15;\r\n        break;\r\n      case 2016:\r\n        currData = data_16;\r\n        break;\r\n      case 2017:\r\n        currData = data_1718;\r\n        break;\r\n      case 2018:\r\n        currData = data_1718;\r\n    }\r\n    foundCutoff = false;\r\n    for (let j = 0; j < currData.length; j++) {\r\n      let item = currData[j];\r\n      if (item.year == yearList[i] && (gender == \"n\" || item.sex == gender) && item.res_name_edited == resID) {\r\n        foundCutoff = true;\r\n        switch (typeCol) {\r\n          case \"individual\":\r\n            cutoffs.push(item.individual);\r\n            break;\r\n          case \"group_2\":\r\n            cutoffs.push(item.group_2);\r\n            break;\r\n          case \"group_3\":\r\n            cutoffs.push(item.group_3);\r\n            break;\r\n          case \"group_4\":\r\n            cutoffs.push(item.group_4);\r\n        }\r\n        if (cutoffs[cutoffs.length - 1] == \"\") {\r\n          cutoffs.pop();\r\n          foundCutoff = false;\r\n        }\r\n        break;\r\n      }\r\n    }\r\n    if (!foundCutoff) {\r\n      yearList.splice(i, 1);\r\n      i--;\r\n    }\r\n  }\r\n\r\n  if (cutoffs.length == 0) {\r\n    return \"Invalid input\";\r\n  } else if (cutoffs.length == 1) {\r\n    return cutoffs[0];\r\n  } else if (cutoffs.length > 1 && yearList.length == cutoffs.length) {\r\n    const ls_model = findLeastSquares(yearList, cutoffs);\r\n    return Math.round(ls_model[0] * des_year + ls_model[1]);\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction processSingleQuery(gender_raw, roomType_raw, resName_raw, tierNum_raw, applyType_raw) {\r\n\r\n  /* gender */\r\n  let gender;\r\n  switch(gender_raw) {\r\n    case \"male\":\r\n      gender = \"m\";\r\n      break;\r\n    case \"female\":\r\n      gender = \"f\";\r\n      break;\r\n    default:\r\n      gender = \"n\";\r\n  }\r\n\r\n  /* room type + residence */\r\n  let roomType;\r\n  switch(roomType_raw) {\r\n    case \"1 room single\":\r\n      roomType = \"1 Room Single\";\r\n      break;\r\n    case \"1 room double\":\r\n      roomType = \"1 Room Double\";\r\n      break;\r\n    case \"1 room double (focus)\":\r\n      roomType = \"1 Room Double (focus)\";\r\n      break;\r\n    case \"2 room double\":\r\n      roomType = \"2 Room Double\";\r\n      break;\r\n    case \"2 room double (focus)\": \r\n      roomType = \"2 Room Double (focus)\";\r\n      break;\r\n    case \"1 room triple\": \r\n      roomType = \"1 Room Triple\";\r\n      break;\r\n    case \"1 room quad\":\r\n      roomType = \"1 Room Quad\";\r\n      break;\r\n    case \"4-person\":\r\n      roomType = \"4-room\";\r\n      break;\r\n    case \"6-person\":\r\n      roomType = \"6-room\";\r\n      break;\r\n    case \"standard room\": \r\n      roomType = \"Standard\";\r\n      break;\r\n    case \"premier room\":\r\n      roomType = \"Premier\";\r\n      break;\r\n    case \"substance free housing\":\r\n      roomType = \"Substance Free Housing\";\r\n      break;\r\n    case \"ethnic housing\":\r\n      roomType = \"ETHNIC\";\r\n      break;\r\n    case \"2 bedroom apartment\":\r\n      roomType = \"Double\";\r\n      break;\r\n    case \"3 bedroom apartment\":\r\n      roomType = \"Triple\";\r\n      break;\r\n    case \"4 bedroom apartment\":\r\n      roomType = \"Quad\";\r\n      break;\r\n    default:\r\n      roomType = \"Any\";\r\n  }\r\n  if (roomType == \"ETHNIC\") {\r\n    switch (resName_raw) {\r\n      case \"Ujamaa\":\r\n        roomType = \"Ethnic (B)\";\r\n        break;\r\n      case \"Hammarskjold\":\r\n        roomType = \"Ethnic (I)\";\r\n        break;\r\n      case \"Muwekma\":\r\n        roomType = \"Ethnic (N)\";\r\n        break;\r\n      case \"Zapata\":\r\n        roomType = \"Ethnic (C)\";\r\n        break;\r\n      case \"Okada\":\r\n        roomType = \"Ethnic (A)\";\r\n        break;\r\n    }\r\n  }\r\n  const resID = roomType + \",\" + resName_raw;\r\n\r\n  /* applytype (number of ppl in group) */\r\n  let typeCol;\r\n  switch (applyType_raw) {\r\n    case \"individual\":\r\n      typeCol = \"individual\";\r\n      break;\r\n    case \"group of 2\":\r\n      typeCol = \"group_2\";\r\n      break;\r\n    case \"group of 3\":\r\n      typeCol = \"group_3\";\r\n      break;\r\n    case \"group of 4\":\r\n      typeCol = \"group_4\";\r\n      break;\r\n    default :\r\n      return \"Invalid input\";\r\n  }\r\n\r\n  /* tier number */\r\n  const tierNum = tierNum_raw;\r\n  if (tierNum != 1 && tierNum != 2 && tierNum != 3) {\r\n    return \"Invalid input\";\r\n  }\r\n\r\n  let output = '';\r\n  /* find percentage */\r\n  const score_ceiling = tierNum * 1000;\r\n  const score_floor = score_ceiling - 999;\r\n  const cutoff = processTrends(gender, typeCol, resID, 2019);\r\n\r\n  if (cutoff > score_ceiling) {\r\n    output = '>99';\r\n  } else if (cutoff < score_floor) {\r\n    output = '<0.1';\r\n  } else {\r\n    //output = (cutoff - score_floor) / 10;\r\n    output = (score_ceiling - cutoff) / 10;\r\n  }\r\n\r\n  return output;\r\n}\r\n\r\nconst log = (type) => console.log.bind(console, type);\r\n\r\nconst onError = (errors) => console.log('I have', errors.length, 'errors to fix');\r\n\r\nclass Calculator extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      results: null\r\n    }\r\n  }\r\n\r\n  onSubmit = ({formData}) => {\r\n    let sex = formData.sex;\r\n    let roomtype = formData.roomtype;\r\n    let residence = formData.residence;\r\n    let tiernumber = formData.tiernumber;\r\n    let applytype = formData.applytype;\r\n\r\n    this.setState({results: processSingleQuery(sex, roomtype, residence, tiernumber, applytype)});\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Calculator\" style={divStyle}>\r\n        <header className=\"Calculator-header\" style={calculatorStyle}>\r\n          <br />\r\n          <h1 style={headerStyle}>Calculator</h1>\r\n          <Form schema={schema}\r\n            onChange={log(\"changed\")}\r\n            onSubmit={this.onSubmit}\r\n            formData={this.formData}\r\n            onError={onError} />\r\n          <br />\r\n          <div style={answerStyle}>\r\n            {this.state.results && `Your Chances: ${this.state.results}%` }\r\n          </div> \r\n          <br />\r\n        </header>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Calculator;","import React from 'react';\r\nimport MUIDataTable from 'mui-datatables';\r\n\r\nconst headerStyle = {\r\n    textAlign: 'center',\r\n    color: '#8c1515',\r\n    fontFamily: 'Open Sans Condensed, sans-serif',\r\n};\r\n\r\nclass PastData extends React.Component {\r\n    render() {\r\n        const columns = [\r\n            {\r\n                name: \"res_name_edited\",\r\n                label: \"Residence\",\r\n                options: { filter: true, sort: true }\r\n            },\r\n            {\r\n                name: \"sex\",\r\n                label: \"Sex\",\r\n                options: { filter: true, sort: false }\r\n            },\r\n            {\r\n                name: \"individual\",\r\n                label: \"Individual\",\r\n                options: { filter: false, sort: true }\r\n            },\r\n            {\r\n                name: \"group_2\",\r\n                label: \"Group of 2\",\r\n                options: { filter: false, sort: true }\r\n            },\r\n            {\r\n                name: \"group_3\",\r\n                label: \"Group of 3\",\r\n                options: { filter: false, sort: true }\r\n            },\r\n            {\r\n                name: \"group_4\",\r\n                label: \"Group of 4\",\r\n                options: { filter: false, sort: true }\r\n            },\r\n            {\r\n                name: \"year\",\r\n                label: \"Year\",\r\n                options: { filter: true, sort: true }\r\n            }\r\n        ];\r\n\r\n        const data = require('./housingData_all.json');\r\n\r\n        const options = {\r\n            filterType: 'checkbox',\r\n            responsive: 'scroll',\r\n        };\r\n\r\n        return (\r\n            <div>\r\n                <br />\r\n                <h1 style={headerStyle}>View Past Data</h1>\r\n                <MUIDataTable\r\n                    data={data}\r\n                    columns={columns}\r\n                    options={options}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PastData;","import React, { Component } from 'react';\r\nimport {BrowserRouter, Route} from 'react-router-dom';\r\nimport './index.css';\r\nimport './App.css';\r\nimport Home from './home';\r\nimport FAQ from './faq';\r\nimport Calculator from './calculator';\r\nimport PastData from './pastdata';\r\n//import * as serviceWorker from './serviceWorker';\r\n\r\nclass App extends React.Component {\r\n  render() {\r\n    return (\r\n      <BrowserRouter>\r\n        <div>\r\n          <Route exact={true} path='/' render={() => (\r\n            <div className=\"App\">\r\n              <Home />\r\n            </div>\r\n          )} />\r\n          <Route exact={true} path='/faq' render={() => (\r\n            <div className=\"App\">\r\n              <FAQ />\r\n            </div>\r\n          )} />\r\n          <Route exact={true} path='/calculator' render={() => (\r\n            <div className=\"App\">\r\n              <Calculator />\r\n            </div>\r\n          )} />\r\n          <Route exact={true} path='/pastdata' render={() => (\r\n            <div className=\"App\">\r\n              <PastData />\r\n            </div>\r\n          )} />\r\n        </div>\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App/>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}